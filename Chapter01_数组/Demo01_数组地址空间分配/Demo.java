package Chapter01_数组.Demo01_数组地址空间分配;

/*
一维数组，是存储在连续内存空间中的相同类型数据的集合。在数组中，可以通过下标索引访问对饮的数据。
    注意：
        1.数组的下标都是从0开始的
        2.数组在内存空间的地址是连续的
        3.因为数组在内存空间的地址是连续的，所以如果需要对数组中的元素进行【删除/增加】操作，难免要移动数组中其他元素的地址，所以在数组中的元素只能被覆盖，不能被删除

二维数组，编写一段测试代码，得到二维数组每个数组的首地址如下：
    776ec8df-->77589789
    4eec7777-->38897777
    3b07d329-->29069329
    将其转换为10进制，可知Java中二维数组的内存地址空间矩阵每行上的元素地址是连续的，但是行与行之间的地址不一定连续（可能在极少的情况下会连续）
 */
public class Demo {
    public static void main(String[] args) {

        int[][] array = {{1, 2}, {3, 4}, {5, 6}};

        for (int i = 0; i < array.length; i++) {
            System.out.println(array[i]);
        }

    }
}
